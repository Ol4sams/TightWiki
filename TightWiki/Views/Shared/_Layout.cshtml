@using TightWiki.Shared;

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Context.Title</title>
    <link rel="stylesheet" href="~/css/site.css" />
    <!-- BEGIN Syntax Highlighter -->
    <link rel="stylesheet" href="/syntax/styles/default.min.css">
    <script src="/syntax/highlight.min.js"></script>
    <script>hljs.highlightAll();</script>

    @Html.Raw(GlobalSettings.HTMLHeader)
    <!-- END Syntax Highlighter -->
    @if (GlobalSettings.IncludeWikiDescriptionInMeta)
    {
        <meta name="description" content="@ViewBag.Context.PageDescription">
    }

    @if (GlobalSettings.IncludeWikiTagsInMeta)
    {
        <meta name="keywords" content="@ViewBag.Context.PageTags">
    }

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        const hostType = 'hostType';
        const build = 'build';
        document.addEventListener("DOMContentLoaded", onInit);

        function getCookie(name) {
            let matches = document.cookie.match(new RegExp("(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"));
            return matches ? decodeURIComponent(matches[1]) : '';
        }

        function getLink() {
            return getCookie(build);
        }

        function onInit(event) {
            let results = getCookie(hostType);

            if (results === 'None' || results === '') {
                let elem = document.getElementById('navButton1');
                elem.style.display = "none";
            }
        }

        function navigateToConstructor() {
            let results = getCookie(hostType);
            let link = getLink() + '/' + results;
            window.location.href = link;
        }
    </script>

    @RenderSection("Scripts", required: false)
</head>

<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <a class="navbar-brand" href="/"><span class="glyphicon"><img src="@GlobalSettings.BrandImageSmall" /></span> @GlobalSettings.Name</a>
                <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                    <ul class="navbar-nav flex-grow-1">
                        @foreach (TightWiki.Shared.Models.Data.MenuItem item in GlobalSettings.MenuItems)
                        {
                            <li class="nav-item"><a class="nav-link text-dark" href="@item.Link">@item.Name</a></li>
                        }

                        @if (ViewBag.Context.CanCreate
                        || (ViewBag.CreatePage == true && ViewBag.Context.CanCreate)
                        || (ViewBag.Context.IsPageLoaded == true && (ViewBag.Context.CanEdit || ViewBag.Context.CanModerate || ViewBag.Context.CanDelete))
                        )
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdownMenuLink" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Page</a>
                                <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">

                                    @if (ViewBag.Context.CanCreate)
                                    {
                                        if (ViewBag.CreatePage == true)
                                        {
                                            <a class="dropdown-item text-dark" href="/Page/Edit/@ViewBag.Context.PageNavigation">Create "@ViewBag.Context.PageNavigation"</a>
                                        }

                                        <a class="dropdown-item text-dark" href="/Page/Edit/">Create new page</a>
                                    }

                                    @if (ViewBag.Context.IsPageLoaded == true)
                                    {
                                        @if (ViewBag.Context.CanCreate)
                                        {
                                            <div class="dropdown-divider"></div>
                                        }
                                        if (ViewBag.Context.CanView && GlobalSettings.EnablePageComments)
                                        {
                                            <a class="dropdown-item text-dark" href="/@ViewBag.Context.PageNavigation/Comments">Comments</a>
                                        }
                                        if (ViewBag.Context.CanDelete)
                                        {
                                            <a class="dropdown-item text-dark" href="/Page/Delete/@ViewBag.Context.PageNavigation">Delete this page</a>
                                        }
                                        if (ViewBag.Context.CanEdit && ViewBag.Context.IsViewingOldVersion == false)
                                        {
                                            <a class="dropdown-item text-dark" href="/Page/Edit/@ViewBag.Context.PageNavigation">Edit</a>
                                        }
                                        if (ViewBag.Context.CanView)
                                        {
                                            <a class="dropdown-item text-dark" href="/@ViewBag.Context.PageNavigation/History">History</a>
                                        }
                                        if (ViewBag.Context.CanCreate)
                                        {
                                            <a class="dropdown-item text-dark" href="/@ViewBag.Context.PageNavigation/Refresh">Refresh</a>
                                        }
                                        if (ViewBag.Context.CanModerate && ViewBag.Context.IsViewingOldVersion)
                                        {
                                            <a class="dropdown-item text-dark" href="/@ViewBag.Context.PageNavigation/revert/@ViewBag.Context.PageRevision">Revert to revision @ViewBag.Context.PageRevision</a>
                                        }
                                        if (ViewBag.Context.CanView && GlobalSettings.EnablePageComments)
                                        {
                                            <a class="dropdown-item text-dark" href="/@ViewBag.Context.PageNavigation">View</a>
                                        }
                                    }
                                </div>
                            </li>
                        }

                        @if (ViewBag.Context.IsAuthenticated == true && (ViewBag.Context.CanModerate || ViewBag.Context.Role == TightWiki.Shared.Library.Constants.Roles.Administrator))
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdownMenuLink" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Admin</a>
                                <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                                    @if (ViewBag.Context.Role == TightWiki.Shared.Library.Constants.Roles.Administrator)
                                    {
                                        <a class="dropdown-item text-dark" href="/Admin/Accounts">Accounts</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Roles">Roles</a>
                                        <div class="dropdown-divider"></div>
                                        <a class="dropdown-item text-dark" href="/Admin/Config">Configuration</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Emojis">Emojis</a>
                                        <a class="dropdown-item text-dark" href="/Admin/MenuItems">Site Menu</a>
                                        <div class="dropdown-divider"></div>
                                        <a class="dropdown-item text-dark" href="/Admin/Stats">Statistics</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Utilities">Utilities</a>
                                        <div class="dropdown-divider"></div>
                                        <a class="dropdown-item text-dark" href="/Admin/MissingPages">Missing Pages</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Moderate">Moderate</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Namespaces">Namespaces</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Pages">Pages</a>
                                    }
                                    else if (ViewBag.Context.CanModerate == true)
                                    {
                                        <a class="dropdown-item text-dark" href="/Admin/MissingPages">Missing Pages</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Moderate">Moderate</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Namespaces">Namespaces</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Pages">Pages</a>
                                    }
                                </div>
                            </li>
                        }

                        @if (ViewBag.Context.IsAuthenticated == true)
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdownMenuLink" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">My</a>
                                <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                                    <a class="dropdown-item text-dark" href="/Account/Profile">Profile</a>
                                    @if (ViewBag.Context?.User?.Provider == "Native")
                                    {
                                        <a class="dropdown-item text-dark" href="/Account/ChangePassword">Change Password</a>
                                    }
                                    <div class="dropdown-divider"></div>
                                    <a class="dropdown-item text-dark" href="/Account/Logout">Logout</a>
                                </div>
                            </li>
                        }

                        @if (ViewBag.Context.IsAuthenticated == false)
                        {
                            <li class="nav-item"><a class="nav-link text-dark" href="/Account/Login?ReturnUrl=@ViewBag.Context.PathAndQuery">Login</a></li>
                        }

                        @if (GlobalSettings.IncludeSearchOnNavbar)
                        {
                            <li class="nav-item ms-auto">
                                <div class="collapse navbar-collapse justify-content-end">
                                    <form class="d-flex" role="search" method="POST" action="/Page/Search">
                                        <input class="form-control me-2" type="search" placeholder="Search" name="SearchTokens" aria-label="Search">
                                        <button class="btn btn-outline-success" type="submit">Search</button>
                                    </form>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @Html.Raw(GlobalSettings.HTMLPreBody)
            @RenderBody()
            @Html.Raw(GlobalSettings.HTMLPostBody)
        </main>
    </div>

    <div class="container">
        @if (GlobalSettings.FooterBlurb != null || GlobalSettings.Copyright != null)
        {
            <hr class="mt-5 mb-5">

            @if (GlobalSettings.FooterBlurb != null)
            {
                @Html.Raw(GlobalSettings.FooterBlurb)
            }
            @if (GlobalSettings.Copyright != null)
            {
                <br />
                @Html.Raw(GlobalSettings.Copyright)
            }
        }
        @Html.Raw(GlobalSettings.HTMLFooter)
    </div>

    <a id="navButton1" onclick="navigateToConstructor()" class="feedback-btn">
        <p class="feedback-txt">Аддоны</p>
    </a>

</body>
</html>
